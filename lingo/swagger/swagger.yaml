openapi: 3.0.0
info:
  description: Basic project with Flask , Connexion and OpenApi 3 created for testing purposes only
  version: 1.0.0
  title: Connexion example
  contact:
    email: milo.voorhout@student.hu.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: alive
    description: Keepalive
paths:
  /ping:
    get:
      tags:
        - alive
      summary: Api keepalive
      description: Api keepalive
      operationId: is_alive
      x-openapi-router-controller: lingo.controllers.alive_controller
      responses:
        "200":
          description: is alive
  /choose/{word_length}:
    get:
      tags: [ Word ]
      operationId: lingo.game.application.game_logic.choose_random_word
      summary: Get a random word based on word length
      parameters:
        - in: path
          name: word_length
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return a word
        404:
          description: Can't choose a word
  /game/create/{user_id}:
    post:
      operationId: lingo.game.application.game_logic.create_game
      summary: Start a game
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: 4
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              {}
  /game/round/{user_id}:
    post:
      operationId: lingo.game.application.game_logic.create_round
      summary: Start a round
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: 4
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              {}
  /game/turn:
    post:
      operationId: guess_word
      x-openapi-router-controller: lingo.game.port.http.game_controller
      summary: Make a guess of the correct word
      parameters:
        - name: user_id
          in: query
          description: User unique identifier
          required: true
          example: 7
          schema:
            type: integer
        - name: guessed_word
          in: query
          description: Users guessed word
          required: true
          example: 'HELLO'
          schema:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              {}
  /game/all:
    get:
      description: Return all games in memory
      operationId: lingo.game.application.game_logic.all_games
      responses:
        200:
          description: OK
          content:
            application/json:
              {}
  /user/all:
    get:
      description: Return all users
      operationId: lingo.user.port.http.user_controller.get_users
      responses:
        200:
          description: OK
          content:
            application/json:
              {}
  /auth/{user_id}:
    get:
      summary: Return JWT token
      operationId: lingo.auth.auth.generate_token
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: 12
          schema:
            type: integer
      responses:
        '200':
          description: JWT token
          content:
            'text/plain':
              schema:
                type: string
  /secret:
    get:
      summary: Return secret string
      operationId: lingo.auth.auth.get_secret
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
        - jwt: [ 'secret' ]

components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: lingo.auth.auth.decode_token

servers:
  - url: http://0.0.0.0:8080/v1/lingo/api